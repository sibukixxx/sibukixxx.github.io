{"version":3,"sources":["webpack:///./src/templates/index.js","webpack:///./src/components/Sidebar/Friend/index.js","webpack:///./src/components/Sidebar/LatestPost/index.js","webpack:///./src/components/Sidebar/Information/index.js","webpack:///./src/components/Sidebar/index.js","webpack:///./src/components/Tag/index.js","webpack:///./src/api/images.js","webpack:///./src/components/Card/index.js","webpack:///./src/components/ShareBox/index.js"],"names":["NavLinkText","color","text","className","style","NavLink","test","url","to","Page","pageContext","location","group","index","first","last","pathPrefix","previousUrl","nextUrl","Fragment","marginTop","map","node","frontmatter","slug","fields","key","justifyContent","marginBottom","href","hasCommentBox","config","friends","Friend","friend","ExternalLink","title","rel","LatestPost","posts","Information","totalCount","defaultProps","wordings","githubUsername","zhihuUsername","email","iconUrl","about","facebook","Icon","icon","target","Sidebar","latestPosts","src","alt","query","render","data","all","limited","Tag","name","count","parseImgur","rawImage","size","match","resizedImage","replace","small","medium","large","huge","parseImageTag","parseTitle","module","exports","getGalleryImage","CardHeader","headerImage","image","backgroundColor","backgroundImage","Card","date","headerBackgroundColor","description","tags","split","CommentButton","lineHeight","paddingLeft","onClick","ReactGA","event","category","action","ShareBox"],"mappings":"uKAUMA,G,OAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OAClB,yBACEC,UAAU,UACVC,MAAO,CACLH,UAGDC,KAICG,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,IAAKL,EAAW,EAAXA,KAC5B,OAAKI,EAKH,kBAAC,IAAD,CAAME,GAAE,GAAKD,GACX,kBAACP,EAAD,CAAaC,MAAM,UAAUC,KAAMA,KAL9B,kBAACF,EAAD,CAAaC,MAAM,UAAUC,KAAMA,KAsD/BO,UA5CF,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAEzBC,EACEF,EADFE,MAAOC,EACLH,EADKG,MAAOC,EACZJ,EADYI,MAAOC,EACnBL,EADmBK,KAAMC,EACzBN,EADyBM,WAGvBC,EAAcJ,EAAQ,GAAM,EAAI,GAAlB,IAA2BG,EAA3B,KAAyCH,EAAQ,GAC/DK,EAAO,IAAOF,EAAP,KAAqBH,EAAQ,GAE1C,OACE,kBAAC,IAAMM,SAAP,KACE,yBACEhB,UAAU,eACVC,MAAO,CACLgB,UAAW,KAGb,kBAAC,IAAD,MACA,yBAAKjB,UAAU,iDACZS,EAAMS,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,kBAAC,IAAD,iBAAUA,EAAKC,YAAf,CAA4BhB,IAAKe,EAAKC,YAAYC,KAAOF,EAAKC,YAAYC,KAAOF,EAAKG,OAAOD,KAAME,IAAKJ,EAAKG,OAAOD,WAGtH,yBACErB,UAAU,MACVC,MAAO,CACLuB,eAAgB,eAChBC,aAAc,SAGhB,yBAAKzB,UAAU,gBACb,kBAACE,EAAD,CAASC,MAAOQ,EAAOP,IAAKU,EAAaf,KAAK,cAEhD,yBAAKC,UAAU,YACb,kBAACE,EAAD,CAASC,MAAOS,EAAMR,IAAKW,EAAShB,KAAK,YAI/C,yBAAKC,UAAU,+BAEjB,kBAAC,IAAD,CAAUI,IAAKI,EAASkB,KAAMC,eAAe,O,w/BChE1BC,SAAjBC,gB,MAAU,G,EAgBHC,EAdA,kBACb,yBAAK9B,UAAU,UACb,mCACC6B,EAAQX,KAAI,SAAAa,GAAM,OACjB,kBAACC,EAAA,EAAD,CACEN,KAAMK,EAAOL,KACbO,MAAOF,EAAOE,MACdV,IAAKQ,EAAOE,MACZC,IAAI,kBCQGC,G,OAnBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACjB,yBAAKpC,UAAU,eACb,mCACCoC,EAAMlB,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,kBAAC,OAAD,CACEd,GAAIc,EAAKC,YAAYhB,KAAOe,EAAKC,YAAYC,MAAQF,EAAKG,OAAOD,KACjEE,IAAKJ,EAAKC,YAAYhB,KAAOe,EAAKC,YAAYC,MAAQF,EAAKG,OAAOD,KAClEK,KAAMP,EAAKC,YAAYhB,KAAOe,EAAKC,YAAYC,MAAQF,EAAKG,OAAOD,MAElEF,EAAKC,YAAYa,aCPpBI,G,OAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYF,EAAf,EAAeA,MAAf,OAClB,yBAAKpC,UAAU,sCACb,6BACA,gCAEGsC,EAFH,QAKA,6BACA,kBAAC,EAAD,CAAYF,MAAOA,IACnB,6BACA,kBAAC,EAAD,SASJC,EAAYE,aAAe,CACzBH,MAAO,IAGMC,Q,UCdXT,SAPFY,iB,MAAW,G,EACXC,EAMEb,SANFa,eACAC,EAKEd,SALFc,cACAC,EAIEf,SAJFe,MACAC,EAGEhB,SAHFgB,QACAC,EAEEjB,SAFFiB,MACAC,EACElB,SADFkB,SAGIC,EAAO,SAAC,GAAD,IAAGrB,EAAH,EAAGA,KAAMsB,EAAT,EAASA,KAAT,OACX,uBACEC,OAAO,SACPvB,KAAMA,EACNQ,IAAI,wCACJlC,UAAU,eAEV,0BAAMA,UAAU,yBACd,kBAAC,IAAD,CAAiBgD,KAAMA,OAKvBE,EAAU,SAAC,GAAD,IAAGZ,EAAH,EAAGA,WAAYa,EAAf,EAAeA,YAAf,OACd,4BAAQnD,UAAU,gFAChB,yBAAKA,UAAU,YACb,kBAAC,OAAD,CAAMK,GAAIwC,EAAOnB,KAAMmB,EAAO7C,UAAU,QACtC,yBAAKA,UAAU,SAASoD,IAAKR,EAASS,IAAI,UAC1C,sCAEF,uBAAGrD,UAAU,QAAQwC,EAAS,IAC9B,uBAAGxC,UAAU,QAAQwC,EAAS,IAC9B,kBAAC,EAAD,CACEd,KAAI,gCAAkCgB,EACtCM,KAAM,CAAC,MAAO,WAEhB,kBAAC,EAAD,CACEtB,KAAI,sBAAwBe,EAC5BO,KAAM,CAAC,MAAO,YAEhB,kBAAC,EAAD,CAAMtB,KAAI,UAAYiB,EAASK,KAAM,CAAC,MAAO,cAC5CF,GACI,kBAAC,EAAD,CAAMpB,KAAI,4BAA8BoB,EAA9B,IAA2CE,KAAM,CAAC,MAAO,cAExE,kBAAC,EAAD,CAAaV,WAAYA,EAAYF,MAAOe,OAelDD,EAAQX,aAAe,CACrBD,WAAY,EACZa,YAAa,IAGA,sBACb,kBAAC,cAAD,CACEG,MAAK,aAiCLC,OAAQ,SAAAC,GAAI,OAAI,kBAAC,EAAD,iBAAaA,EAAKC,IAASD,EAAKE,WAlClD,W,2DCzEIC,EAAM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACV,uBAAGnC,KAAI,QAAUkC,EAAQ5D,UAAU,cAChC4D,EADH,IAGGC,IASLF,EAAIpB,aAAe,CACjBsB,MAAO,IAGMF,O,+BCdf,IAEMG,EAAa,SAACC,EAAUC,GAC5B,QAD+C,IAAnBA,MAAO,UAC9BD,EACH,MAAM,kCAcR,GAAIA,EAASE,MAAM,eAEjB,OAAIF,EAASE,MAAM,QACVF,EAEH,uBAAwBA,EAGhC,IAAMG,EAAeH,EAASI,QAAQ,aAAjB,KAnBL,CACd,eAAgB,IAChB,aAAc,IACdC,MAAO,IACPC,OAAQ,IACRC,MAAO,IACPC,KAAM,KAayDP,GAA5C,OAErB,OAAIE,EAAaD,MAAM,QACdC,EAEH,uBAAwBA,GAK1BM,EAAgB,SAAC,GAAD,IAAG9C,EAAH,EAAGA,KAAMO,EAAT,EAASA,MAAOlC,EAAhB,EAAgBA,KAAhB,qDAA0E+D,EAC9FpC,EACA,SAFoB,IAFH,SAACO,EAAOlC,GAAR,iBAA2BkC,GAASlC,GAApC,IAKd0E,CAAWxC,EAAOlC,GAHD,OAUtB2E,EAAOC,QAAU,CACfb,aACAU,gBACAI,gBARsB,SAAC,GAAD,IAAGlD,EAAH,EAAGA,KAAMO,EAAT,EAASA,MAAOlC,EAAhB,EAAgBA,KAAhB,0CAA+D+D,EACrFpC,EACA,QAFsB,KAGlB8C,EAAc,CAAE9C,OAAMO,QAAOlC,SAHX,U,qFChClB8E,G,OAAa,SAAC,GAAD,IALCC,EAAahF,EAKXM,EAAH,EAAGA,IAAK2E,EAAR,EAAQA,MAAOC,EAAf,EAAeA,gBAAf,OACjB,kBAAC,OAAD,CAAM3E,GAAID,EAAKsB,KAAMtB,GACnB,yBAAKJ,UAAU,UAAUC,OAPT6E,EAO2BC,EAPdjF,EAOqBkF,EAPV,CAC1CA,gBAAgB,IAAKlF,EACrBmF,gBAAgB,QAASnB,qBAAWgB,EAAa,SAAlC,WASXI,EAAO,SAAC,GAAD,IACXjD,EADW,EACXA,MACAkD,EAFW,EAEXA,KACA/E,EAHW,EAGXA,IACA0E,EAJW,EAIXA,YACAM,EALW,EAKXA,sBACAC,EANW,EAMXA,YANW,IAOXC,YAPW,MAOJ,GAPI,SASX,yBAAKtF,UAAU,kBACb,yBAAKA,UAAU,eACZ8E,GACC,kBAACD,EAAD,CACEzE,IAAKA,EACL2E,MAAOD,EACPE,gBAAiBI,IAGrB,yBAAKpF,UAAU,QACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,SACb,0BAAMA,UAAU,QAAQmF,EAAKI,MAAM,KAAK,IACvCD,EAAKpE,KAAI,SAAA0C,GAAI,OACZ,kBAAC,IAAD,CAAKA,KAAMA,EAAMrC,IAAKqC,QAG1B,kBAAC,OAAD,CAAMvD,GAAID,EAAKsB,KAAMtB,GACnB,wBAAIJ,UAAU,SAASiC,IAEzB,2BAAIoD,GACJ,kBAAC,OAAD,CAAMhF,GAAID,EAAKsB,KAAMtB,GAArB,qBAqBV8E,EAAK3C,aAAe,CAClBuC,YAAa,GACbQ,KAAM,GACNH,KAAM,GACNC,sBAAuB,IAGVF,O,iCC/Ef,qCAQMM,GARN,OAQsB,kBACpB,uBACExF,UAAU,eACVC,MAAO,CACLwF,WAAY,SACZ3F,MAAO,UACP4F,YAAa,WAEfhE,KAAK,oBACLiE,QAAS,kBACPC,IAAQC,MAAM,CACZC,SAAU,OACVC,OAAQ,uBAIZ,kBAAC,IAAD,CAAiB/C,KAAM,CAAC,MAAO,gBAI7BgD,EAAW,SAAC,GAAD,IAAG5F,EAAH,EAAGA,IAAKuB,EAAR,EAAQA,cAAR,OACf,yBAAK3B,UAAU,eACb,uBACE0B,KAAI,gDAAkDtB,EACtD6B,MAAM,GACNjC,UAAU,eACV2F,QAAS,kBACPC,IAAQC,MAAM,CACZC,SAAU,QACVC,OAAQ,qBAIZ,kBAAC,IAAD,CAAiB/C,KAAM,CAAC,MAAO,iBAIhCrB,GAAiB,kBAAC6D,EAAD,MAElB,uBACExF,UAAU,eACV0B,KAAK,UACLiE,QAAS,WACPC,IAAQC,MAAM,CACZC,SAAU,OACVC,OAAQ,mBAGZ9F,MAAO,CACLwF,WAAY,SACZC,YAAa,WAGf,kBAAC,IAAD,CAAiB1C,KAAM,CAAC,MAAO,mBAUrCgD,EAASzD,aAAe,CACtBZ,eAAe,GAGFqE","file":"component---src-templates-index-js-43b4c1c3b02abb689cc3.js","sourcesContent":["/* eslint react/prop-types: 0 */\nimport React from 'react';\nimport Link from 'gatsby-link';\n\nimport Card from '../components/Card';\nimport Sidebar from '../components/Sidebar';\nimport ShareBox from '../components/ShareBox';\n\nimport './index.scss';\n\nconst NavLinkText = ({ color, text }) => (\n  <div\n    className=\"navlink\"\n    style={{\n      color,\n    }}\n  >\n    {text}\n  </div>\n);\n\nconst NavLink = ({ test, url, text }) => {\n  if (!test) {\n    return <NavLinkText color=\"#7d7d7d\" text={text} />;\n  }\n\n  return (\n    <Link to={`${url}`}>\n      <NavLinkText color=\"#66ccff\" text={text} />\n    </Link>\n  );\n};\n\nconst Page = ({ pageContext, location }) => {\n  const {\n    group, index, first, last, pathPrefix,\n  } = pageContext;\n\n  const previousUrl = index - 1 === 1 ? '' : `/${pathPrefix}/${index - 1}`;\n  const nextUrl = `/${pathPrefix}/${index + 1}`;\n\n  return (\n    <React.Fragment>\n      <div\n        className=\"row homepage\"\n        style={{\n          marginTop: 20,\n        }}\n      >\n        <Sidebar />\n        <div className=\"col-xl-6 col-lg-7 col-md-12 col-xs-12 order-2\">\n          {group.map(({ node }) => (\n            <Card {...node.frontmatter} url={node.frontmatter.slug ? node.frontmatter.slug : node.fields.slug} key={node.fields.slug} />\n          ))}\n\n          <div\n            className=\"row\"\n            style={{\n              justifyContent: 'space-around',\n              marginBottom: '20px',\n            }}\n          >\n            <div className=\"previousLink\">\n              <NavLink test={!first} url={previousUrl} text=\"Previous\" />\n            </div>\n            <div className=\"nextLink\">\n              <NavLink test={!last} url={nextUrl} text=\"Next\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"col-xl-2 col-lg-1 order-3\" />\n      </div>\n      <ShareBox url={location.href} hasCommentBox={false} />\n    </React.Fragment>\n  );\n};\n\nexport default Page;\n","import React from 'react';\n\nimport ExternalLink from '../../ExternalLink';\n\nimport { config } from '../../../../data';\n\nimport './index.scss';\n\nconst { friends = [] } = config;\n\nconst Friend = () => (\n  <div className=\"friend\">\n    <p>友情鏈接</p>\n    {friends.map(friend => (\n      <ExternalLink\n        href={friend.href}\n        title={friend.title}\n        key={friend.title}\n        rel=\"noopener\"\n      />\n    ))}\n  </div>\n);\n\nexport default Friend;\n","import React from 'react';\n\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst LatestPost = ({ posts }) => (\n  <div className=\"latest-post\">\n    <p>最新文章</p>\n    {posts.map(({ node }) => (\n      <Link\n        to={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\n        key={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\n        href={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\n      >\n        {node.frontmatter.title}\n      </Link>\n    ))}\n  </div>\n);\n\nLatestPost.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default LatestPost;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Friend from '../Friend';\nimport LatestPost from '../LatestPost';\nimport './index.scss';\n\n// eslint-disable-next-line react/prop-types\nconst Information = ({ totalCount, posts }) => (\n  <div className=\"d-none d-lg-block information my-2\">\n    <hr />\n    <p>\n      共&nbsp;\n      {totalCount}\n      &nbsp;篇文章\n    </p>\n    <hr />\n    <LatestPost posts={posts} />\n    <hr />\n    <Friend />\n  </div>\n);\n\nInformation.propTypes = {\n  totalCount: PropTypes.number.isRequired,\n  posts: PropTypes.array,\n};\n\nInformation.defaultProps = {\n  posts: [],\n};\n\nexport default Information;\n","import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { config } from '../../../data';\n\nimport Information from './Information';\n\nimport './index.scss';\n\nconst {\n  wordings = [],\n  githubUsername,\n  zhihuUsername,\n  email,\n  iconUrl,\n  about,\n  facebook,\n} = config;\n\nconst Icon = ({ href, icon }) => (\n  <a\n    target=\"_blank\"\n    href={href}\n    rel=\"external nofollow noopener noreferrer\"\n    className=\"custom-icon\"\n  >\n    <span className=\"fa-layers fa-fw fa-2x\">\n      <FontAwesomeIcon icon={icon} />\n    </span>\n  </a>\n);\n\nconst Sidebar = ({ totalCount, latestPosts }) => (\n  <header className=\"intro-header site-heading text-center col-xl-2 col-lg-3 col-xs-12 order-lg-1\">\n    <div className=\"about-me\">\n      <Link to={about} href={about} className=\"name\">\n        <img className=\"avatar\" src={iconUrl} alt=\"Calpa\" />\n        <h4>Calpa</h4>\n      </Link>\n      <p className=\"mb-1\">{wordings[0]}</p>\n      <p className=\"mb-3\">{wordings[1]}</p>\n      <Icon\n        href={`https://www.zhihu.com/people/${zhihuUsername}`}\n        icon={['fab', 'zhihu']}\n      />\n      <Icon\n        href={`https://github.com/${githubUsername}`}\n        icon={['fab', 'github']}\n      />\n      <Icon href={`mailto:${email}`} icon={['far', 'envelope']} />\n      {facebook\n        && <Icon href={`https://www.facebook.com/${facebook}/`} icon={['fab', 'facebook']} />\n      }\n      <Information totalCount={totalCount} posts={latestPosts} />\n    </div>\n  </header>\n);\n\nIcon.propTypes = {\n  href: PropTypes.string.isRequired,\n  icon: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nSidebar.propTypes = {\n  totalCount: PropTypes.number,\n  latestPosts: PropTypes.array, //eslint-disable-line\n};\n\nSidebar.defaultProps = {\n  totalCount: 0,\n  latestPosts: [],\n};\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      fragment cardData on MarkdownRemark {\n        fields {\n          slug\n        }\n        frontmatter {\n          id\n          title\n          url: slug\n          date\n          tags\n          description\n          headerImage\n        }\n      }\n\n      query SidebarQuery {\n        all: allMarkdownRemark {\n          totalCount\n        }\n\n        limited: allMarkdownRemark(\n          sort: { order: DESC, fields: frontmatter___date }\n          limit: 6\n        ) {\n          latestPosts: edges {\n            node {\n              ...cardData\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Sidebar {...data.all} {...data.limited} />}\n  />\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Tag = ({ name, count }) => (\n  <a href={`/tag/${name}`} className=\"header-tag\">\n    {name}\n    &nbsp;\n    {count}\n  </a>\n);\n\nTag.propTypes = {\n  name: PropTypes.string.isRequired,\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nTag.defaultProps = {\n  count: '',\n};\n\nexport default Tag;\n","// s = Small Square (90×90)\n// b = Big Square (160×160)\n// t = Small Thumbnail (160×160)\n// m = Medium Thumbnail (320×320)\n// l = Large Thumbnail (640×640)\n// h = Huge Thumbnail (1024×1024)\nconst defaultPicture = 'M795H8A.jpg';\n\nconst parseImgur = (rawImage, size = 'large') => {\n  if (!rawImage) {\n    return `https://i.imgur.com/${defaultPicture}`;\n  }\n\n  const mapping = {\n    'small-square': 's',\n    'big-square': 'b',\n    small: 't',\n    medium: 'm',\n    large: 'l',\n    huge: 'h',\n  };\n\n  // Don't resize the png image\n  // as there is a transparent bug in imgur\n  if (rawImage.match('(png)|(gif)')) {\n    // Prevent double http url\n    if (rawImage.match('http')) {\n      return rawImage;\n    }\n    return `https://i.imgur.com/${rawImage}`;\n  }\n\n  const resizedImage = rawImage.replace(/(.*)\\.(.*)/, `$1${mapping[size]}.$2`);\n  // Prevent double http url\n  if (resizedImage.match('http')) {\n    return resizedImage;\n  }\n  return `https://i.imgur.com/${resizedImage}`;\n};\n\nconst parseTitle = (title, text) => `title=\"${title || text}\"`;\n\nconst parseImageTag = ({ href, title, text }) => `<img class=\"lozad d-block mx-auto\" data-src=${parseImgur(\n  href,\n  'large',\n)} ${parseTitle(title, text)} />`;\n\nconst getGalleryImage = ({ href, title, text }) => `<a data-fancybox=\"gallery\" href=\"${parseImgur(\n  href,\n  'huge',\n)}\">${parseImageTag({ href, title, text })}</a>`;\n\nmodule.exports = {\n  parseImgur,\n  parseImageTag,\n  getGalleryImage,\n};\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport Tag from '../Tag';\n\nimport { parseImgur } from '../../api/images';\n\nimport './index.scss';\n\nconst imageStyle = (headerImage, color) => ({\n  backgroundColor: `#${color}`,\n  backgroundImage: ` url(${parseImgur(headerImage, 'large')})`,\n});\n\nconst CardHeader = ({ url, image, backgroundColor }) => (\n  <Link to={url} href={url}>\n    <div className=\"wrapper\" style={imageStyle(image, backgroundColor)} />\n  </Link>\n);\n\nconst Card = ({\n  title,\n  date,\n  url,\n  headerImage,\n  headerBackgroundColor,\n  description,\n  tags = [],\n}) => (\n  <div className=\"col-sm-12 pb-4\">\n    <div className=\"custom-card\">\n      {headerImage && (\n        <CardHeader\n          url={url}\n          image={headerImage}\n          backgroundColor={headerBackgroundColor}\n        />\n      )}\n      <div className=\"data\">\n        <div className=\"content\">\n          <div className=\"stats\">\n            <span className=\"date\">{date.split('T')[0]}</span>\n            {tags.map(name => (\n              <Tag name={name} key={name} />\n            ))}\n          </div>\n          <Link to={url} href={url}>\n            <h4 className=\"title\">{title}</h4>\n          </Link>\n          <p>{description}</p>\n          <Link to={url} href={url}>\n            ....繼續閱讀全文內容\n          </Link>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string,\n  url: PropTypes.string.isRequired,\n  headerImage: PropTypes.string,\n  headerBackgroundColor: PropTypes.string,\n  description: PropTypes.string.isRequired,\n  tags: PropTypes.arrayOf(PropTypes.string),\n};\n\nCardHeader.propTypes = Card.propTypes;\n\nCard.defaultProps = {\n  headerImage: '',\n  tags: [],\n  date: '',\n  headerBackgroundColor: '',\n};\n\nexport default Card;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport ReactGA from 'react-ga';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './index.scss';\n\nconst CommentButton = () => (\n  <a\n    className=\"share-button\"\n    style={{\n      lineHeight: '1.7rem',\n      color: '#337ab7',\n      paddingLeft: '0.15rem',\n    }}\n    href=\"#gitalk-container\"\n    onClick={() =>\n      ReactGA.event({\n        category: 'User',\n        action: 'Goto Comment Box',\n      })\n    }\n  >\n    <FontAwesomeIcon icon={['far', 'comment']} />\n  </a>\n);\n\nconst ShareBox = ({ url, hasCommentBox }) => (\n  <div className=\"m-share-box\">\n    <a\n      href={`https://www.facebook.com/sharer/sharer.php?u=${url}`}\n      title=\"\"\n      className=\"share-button\"\n      onClick={() =>\n        ReactGA.event({\n          category: 'Share',\n          action: 'Facebook Share',\n        })\n      }\n    >\n      <FontAwesomeIcon icon={['fab', 'facebook-f']} />\n    </a>\n\n    {/* 視覺置中 => 稍微往上偏移 */}\n    {hasCommentBox && <CommentButton />}\n\n    <a\n      className=\"share-button\"\n      href=\"#header\"\n      onClick={() => {\n        ReactGA.event({\n          category: 'User',\n          action: 'Scroll to Top',\n        });\n      }}\n      style={{\n        lineHeight: '1.7rem',\n        paddingLeft: '0.1rem',\n      }}\n    >\n      <FontAwesomeIcon icon={['fas', 'chevron-up']} />\n    </a>\n  </div>\n);\n\nShareBox.propTypes = {\n  url: PropTypes.string.isRequired,\n  hasCommentBox: PropTypes.bool,\n};\n\nShareBox.defaultProps = {\n  hasCommentBox: true,\n};\n\nexport default ShareBox;\n"],"sourceRoot":""}