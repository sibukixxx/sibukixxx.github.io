<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sibukixxx.github.io</title>
    <link>https://sibukixxx.github.io/index.xml</link>
    <description>Recent content on sibukixxx.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>Asia/Tokyo</language>
    <lastBuildDate>Tue, 08 Nov 2016 16:02:59 +0900</lastBuildDate>
    <atom:link href="https://sibukixxx.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Terraform で GCE やってみた</title>
      <link>https://sibukixxx.github.io/blog/terraform-%E3%81%A7-gce-%E3%82%84%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F/</link>
      <pubDate>Tue, 08 Nov 2016 16:02:59 +0900</pubDate>
      
      <guid>https://sibukixxx.github.io/blog/terraform-%E3%81%A7-gce-%E3%82%84%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F/</guid>
      <description>

&lt;p&gt;GCP が東京リージョン(asia-northeast1)で正式運用開始されたようなので、いい機会だからTerraform を使ってインスタンスを立ち上げたくなった&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://googlecloudplatform-japan.blogspot.jp/2016/11/tokyo-region-now-open.html?m=1&#34;&gt;東京 GCP リージョン の正式運用を開始しました&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;terraformのインストール&#34;&gt;Terraformのインストール&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[@MBP01 workspace]$ brew install terraform
[@MBP01 workspace]$ terraform version  
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;gcpの認証情報を取得&#34;&gt;GCPの認証情報を取得&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://console.cloud.google.com/home/dashboard&#34;&gt;GCP コンソール&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;API Manager&lt;/li&gt;
&lt;li&gt;認証情報&lt;/li&gt;
&lt;li&gt;認証情報を作成&lt;/li&gt;
&lt;li&gt;サービスアカウント キー&lt;/li&gt;
&lt;li&gt;Compute Engine default service account&lt;/li&gt;
&lt;li&gt;JSON&lt;/li&gt;
&lt;li&gt;作成&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;terraform-の設定ファイルを準備する&#34;&gt;Terraform の設定ファイルを準備する&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;サンプル(gce_sample.tf)&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;# Configure the Google Cloud provider
provider &amp;quot;google&amp;quot; {
   　credentials = &amp;quot;${file(“service_account.json&amp;quot;)}&amp;quot;
　　　project = “{project_id}”
    region = &amp;quot;asia-northeast1-a&amp;quot;
}

# Configure the Google Compute Engine Instance
resource &amp;quot;google_compute_instance&amp;quot; &amp;quot;default&amp;quot; {
    name = &amp;quot;test01&amp;quot;
    machine_type = &amp;quot;f1-micro&amp;quot;
    zone = &amp;quot;asia-northeast1-a&amp;quot;
    tags = [“test”]

    disk {
        image = &amp;quot;debian-7-wheezy-v20140814&amp;quot;
    }

    network_interface {
        network = &amp;quot;default&amp;quot;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;gce-の確認&#34;&gt;GCE の確認&lt;/h3&gt;

&lt;p&gt;“name” で指定したサーバーが立ち上がっているのを確認&lt;/p&gt;

&lt;p&gt;おわり&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>git stash</title>
      <link>https://sibukixxx.github.io/blog/git-stash/</link>
      <pubDate>Sat, 29 Oct 2016 18:56:53 +0900</pubDate>
      
      <guid>https://sibukixxx.github.io/blog/git-stash/</guid>
      <description>&lt;pre&gt;&lt;code&gt;git stash save
git stash save &amp;quot;message&amp;quot;
git stash list 
git stash show stash@{N}
git stash show -p stash@{N} # diff
git stash pop stash@{N} # apply =&amp;gt; delete
git stash apply stash@{N} # apply =&amp;gt; leave
git stash drop stash@{N} 
git stash -k # all unstage
git stash -u # all untrack
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Thinking of markup</title>
      <link>https://sibukixxx.github.io/blog/thinking-of-markup/</link>
      <pubDate>Sat, 29 Oct 2016 17:27:03 +0900</pubDate>
      
      <guid>https://sibukixxx.github.io/blog/thinking-of-markup/</guid>
      <description>

&lt;p&gt;マークアップをする心構えとして、HTML5にのっとった要素を積極的に利用していく。役割をHTML上で明示してあれば可用性が高まる。role属性やWAI-ARIA が当てはまる。逆にボタンを実装するような場合、単にdiv + aタグで囲みCSSでなんでもこなそうとしないほうがよい。&lt;/p&gt;

&lt;h3 id=&#34;role属性&#34;&gt;role属性&lt;/h3&gt;

&lt;p&gt;role 属性の一覧は下記URLで確認することができる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.w3.org/TR/wai-aria/roles#role_definitions_header&#34;&gt;5.4. Definition of Roles(全 role 一覧) - W3C / ARIA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;要素すべてについて、role属性を意識する必要は無さそう&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;HTML5 以降の HTML に定義されるいくつかの要素は、暗黙的な role 属性が定義されています。 また、暗黙的な role 属性を持つ要素に対しては、それと同じ role 属性は指定するべきではない、とされています。 したがって、あらゆる要素に role を指定する作業コストは必要になりません。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://xn--lcki7of.jp/502/&#34;&gt;role 属性を正しく設定してアクセシビリティを高める&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;wai-aria-とは&#34;&gt;WAI-ARIA とは&lt;/h3&gt;

&lt;p&gt;WAI-ARIA は Webアプリケーションにおいてアクセシビリティを高めるために策定された仕様。HTMLマークアップしていく上でより詳細な役割を表現することができる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- aria-labelledby 属性
    - 要素とラベルを関連付ける属性
- aria-pressed 属性
    - トグルボタンを表現するための属性
- aria-checked 属性
    - チェック状態を示すためのWAI-ARIAの属性
- aria-hidden 属性
    - ユーザーエージェントに認識させたくない要素に指定するためのWAI-ARIA属性
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;使い方のサンプル&#34;&gt;使い方のサンプル&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;button + span + iconフォント&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;button type=&amp;quot;button&amp;quot; aria-pressed=&amp;quot;true&amp;quot;&amp;gt;
	&amp;lt;span class=“icon” aria-label=“メイン”&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;button + svg&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;button type=&amp;quot;button&amp;quot;  aria-pressed=&amp;quot;true&amp;quot;&amp;gt;
&amp;lt;svg roll=&amp;quot;img&amp;quot; aria-labelledby=“memo”&amp;gt;
    &amp;lt;title id=“memo”&amp;gt;メモ&amp;lt;/title&amp;gt;
    &amp;lt;use xlink:href=&amp;quot;icon-memo.svg&amp;quot;&amp;gt;
&amp;lt;/svg&amp;gt;
&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;参考url&#34;&gt;参考URL&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.w3.org/TR/wai-aria/states_and_properties#aria-checked&#34;&gt;aria-checked 属性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.webcreativepark.net/html/wai-aria/aria-hidden/&#34;&gt;aria-hidden 属性&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>code</title>
      <link>https://sibukixxx.github.io/code/</link>
      <pubDate>Sun, 23 Oct 2016 23:17:59 +0900</pubDate>
      
      <guid>https://sibukixxx.github.io/code/</guid>
      <description>&lt;p&gt;Under construction..&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>about</title>
      <link>https://sibukixxx.github.io/about/</link>
      <pubDate>Sun, 23 Oct 2016 23:17:13 +0900</pubDate>
      
      <guid>https://sibukixxx.github.io/about/</guid>
      <description>&lt;p&gt;工事中&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What is the Grand Totals Aggregations</title>
      <link>https://sibukixxx.github.io/blog/what-is-the-grand-totals-aggregations/</link>
      <pubDate>Sun, 23 Oct 2016 21:45:57 +0900</pubDate>
      
      <guid>https://sibukixxx.github.io/blog/what-is-the-grand-totals-aggregations/</guid>
      <description>

&lt;h1 id=&#34;gt集計とは&#34;&gt;GT集計とは？&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;「GT集計」とは、集計結果の最初に出てくる表で、回収データ全体の各回答比率が集計され、表示されている。グランドトータル（Grand Total）の略で単純集計ともいう。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.macromill.com/landing/words/a054.html&#34;&gt;マクロミル:GT集計とは&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;単純集計は集計結果の全体像を把握するとともに、データ本体が使えるデータかどうか確認・判断するために利用する。可能であれば、経年・類似データと比較できるとよい。&lt;/p&gt;

&lt;p&gt;集計データの取り扱いはあくまでも概要を把握することを目的とする。目的を見失わずに効率を求めることを優先していく。&lt;/p&gt;

&lt;h3 id=&#34;類似ワード&#34;&gt;類似ワード&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;クロス集計&lt;/li&gt;
&lt;li&gt;星取表&lt;/li&gt;
&lt;li&gt;分類項目・集計項目&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Python Anaconda install</title>
      <link>https://sibukixxx.github.io/blog/python-anaconda-install/</link>
      <pubDate>Wed, 19 Oct 2016 15:51:16 +0900</pubDate>
      
      <guid>https://sibukixxx.github.io/blog/python-anaconda-install/</guid>
      <description>&lt;p&gt;統計関連に携わることになり、基本的な統計・数学・機械学習を学んでいく必要が出てきた。
検証環境を手軽に準備したいため、主要ライブラリをオールインワンでインストールできるといわれているAnacondaを導入してみる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;動作環境&lt;/li&gt;
&lt;/ul&gt;

&lt;table frame=&#34;void&#34; rules=&#34;none&#34; style=&#34;width: 19em;&#34;&gt;
&lt;tbody valign=&#34;top&#34;&gt;
&lt;tr&gt;&lt;th&gt;OS:&lt;/th&gt;&lt;td&gt;CentOS6.5&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;導入コマンド&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/yyuu/pyenv.git ~/.pyenv
echo &#39;export PYENV_ROOT=&amp;quot;$HOME/.pyenv&amp;quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
echo &#39;export PATH=&amp;quot;$PYENV_ROOT/bin:$PATH&amp;quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
echo &#39;eval &amp;quot;$(pyenv init -)&amp;quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
source ~/.bashrc

pyenv install -l | grep ana
pyenv install anaconda3-2.5.0
pyenv rehash
pyenv global anaconda3-2.5.0
echo &#39;export PATH=&amp;quot;$PYENV_ROOT/versions/anaconda3-2.5.0/bin/:$PATH&amp;quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
source ~/.bashrc
conda update conda
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;副作用があるらしいので、Anaconda専用環境として利用していこうと思う。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;動作確認&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;$ python -V
Python 3.5.2 :: Anaconda 4.1.1 (64-bit)
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/y__sama/items/5b62d31cb7e6ed50f02c&#34;&gt;データサイエンティストを目指す人のpython環境構築 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Try to Self-Documented Makefile</title>
      <link>https://sibukixxx.github.io/blog/try-to-self-documented-makefile/</link>
      <pubDate>Wed, 19 Oct 2016 00:56:02 +0900</pubDate>
      
      <guid>https://sibukixxx.github.io/blog/try-to-self-documented-makefile/</guid>
      <description>

&lt;p&gt;みんなのGo 1章にあるMakefileを試した.&lt;br /&gt;
makeはいつかやろうとして後回しにしていたのでようやく取り組めてよかった.&lt;/p&gt;

&lt;p&gt;主な注意点は次の通り.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Makefileはタブインデントとする(indentation to tabs and not spaces)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DEFAULT_GOAL&lt;/code&gt; はデフォルトのターゲットを指定できる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GitHubを見る限りGoのライブラリでMakefileを利用する人は結構いるようなので&lt;br /&gt;
適宜参考にさせてもらいつつ自分の手に馴染ませていきたい.&lt;/p&gt;

&lt;h2 id=&#34;参考url&#34;&gt;参考URL&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/kasei-san/items/ad25df63260e86c5cc71&#34;&gt;Makefile ことはじめ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://postd.cc/auto-documented-makefile/&#34;&gt;Makefileを自己文書化する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.songmu.jp/riji/entry/2016-06-13-make2help.html&#34;&gt;Makefileを自己文書化する &lt;code&gt;make2help&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://postd.cc/go-best-practices-2016/#repository-structure&#34;&gt;6年間におけるGoのベストプラクティス: リポジトリ構造&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://sibukixxx.github.io/sample/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sibukixxx.github.io/sample/</guid>
      <description>&lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;An introduction to &lt;a href=&#34;http://asciidoc.org&#34;&gt;AsciiDoc&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_first_section&#34;&gt;First Section&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;item 1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;日本語&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;puts &#34;Hello, World!&#34;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;http://asciidoctor.org/images/octocat.jpg&#34; alt=&#34;GitHub mascot&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;title&#34;&gt;a.rb&lt;/div&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;puts &#34;Hello, World!&#34;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>