<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog-rss on sibukixxx.github.io</title>
    <link>https://sibukixxx.github.io/blog/index.xml</link>
    <description>Recent content in Blog-rss on sibukixxx.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>Asia/Tokyo</language>
    <lastBuildDate>Sun, 23 Oct 2016 21:45:57 +0900</lastBuildDate>
    <atom:link href="https://sibukixxx.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>What is the Grand Totals Aggregations</title>
      <link>https://sibukixxx.github.io/blog/what-is-the-grand-totals-aggregations/</link>
      <pubDate>Sun, 23 Oct 2016 21:45:57 +0900</pubDate>
      
      <guid>https://sibukixxx.github.io/blog/what-is-the-grand-totals-aggregations/</guid>
      <description>

&lt;h1 id=&#34;gt集計とは&#34;&gt;GT集計とは？&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;「GT集計」とは、集計結果の最初に出てくる表で、回収データ全体の各回答比率が集計され、表示されている。グランドトータル（Grand Total）の略で単純集計ともいう。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.macromill.com/landing/words/a054.html&#34;&gt;マクロミル:GT集計とは&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;単純集計は集計結果の全体像を把握するとともに、データ本体が使えるデータかどうか確認・判断するために利用する。可能であれば、経年・類似データと比較できるとよい。&lt;/p&gt;

&lt;p&gt;集計データの取り扱いはあくまでも概要を把握することを目的とする。目的を見失わずに効率を求めることを優先していく。&lt;/p&gt;

&lt;h3 id=&#34;類似ワード&#34;&gt;類似ワード&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;クロス集計&lt;/li&gt;
&lt;li&gt;星取表&lt;/li&gt;
&lt;li&gt;分類項目・集計項目&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Python Anaconda install</title>
      <link>https://sibukixxx.github.io/blog/python-anaconda-install/</link>
      <pubDate>Wed, 19 Oct 2016 15:51:16 +0900</pubDate>
      
      <guid>https://sibukixxx.github.io/blog/python-anaconda-install/</guid>
      <description>&lt;p&gt;統計関連に携わることになり、基本的な統計・数学・機械学習を学んでいく必要が出てきた。
検証環境を手軽に準備したいため、主要ライブラリをオールインワンでインストールできるといわれているAnacondaを導入してみる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;動作環境&lt;/li&gt;
&lt;/ul&gt;

&lt;table frame=&#34;void&#34; rules=&#34;none&#34; style=&#34;width: 19em;&#34;&gt;
&lt;tbody valign=&#34;top&#34;&gt;
&lt;tr&gt;&lt;th&gt;OS:&lt;/th&gt;&lt;td&gt;CentOS6.5&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;導入コマンド&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/yyuu/pyenv.git ~/.pyenv
echo &#39;export PYENV_ROOT=&amp;quot;$HOME/.pyenv&amp;quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
echo &#39;export PATH=&amp;quot;$PYENV_ROOT/bin:$PATH&amp;quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
echo &#39;eval &amp;quot;$(pyenv init -)&amp;quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
source ~/.bashrc

pyenv install -l | grep ana
pyenv install anaconda3-2.5.0
pyenv rehash
pyenv global anaconda3-2.5.0
echo &#39;export PATH=&amp;quot;$PYENV_ROOT/versions/anaconda3-2.5.0/bin/:$PATH&amp;quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
source ~/.bashrc
conda update conda
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;副作用があるらしいので、Anaconda専用環境として利用していこうと思う。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;動作確認&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;$ python -V
Python 3.5.2 :: Anaconda 4.1.1 (64-bit)
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/y__sama/items/5b62d31cb7e6ed50f02c&#34;&gt;データサイエンティストを目指す人のpython環境構築 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Try to Self-Documented Makefile</title>
      <link>https://sibukixxx.github.io/blog/try-to-self-documented-makefile/</link>
      <pubDate>Wed, 19 Oct 2016 00:56:02 +0900</pubDate>
      
      <guid>https://sibukixxx.github.io/blog/try-to-self-documented-makefile/</guid>
      <description>

&lt;p&gt;みんなのGo 1章にあるMakefileを試した.&lt;br /&gt;
makeはいつかやろうとして後回しにしていたのでようやく取り組めてよかった.&lt;/p&gt;

&lt;p&gt;主な注意点は次の通り.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Makefileはタブインデントとする(indentation to tabs and not spaces)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DEFAULT_GOAL&lt;/code&gt; はデフォルトのターゲットを指定できる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GitHubを見る限りGoのライブラリでMakefileを利用する人は結構いるようなので&lt;br /&gt;
適宜参考にさせてもらいつつ自分の手に馴染ませていきたい.&lt;/p&gt;

&lt;h2 id=&#34;参考url&#34;&gt;参考URL&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/kasei-san/items/ad25df63260e86c5cc71&#34;&gt;Makefile ことはじめ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://postd.cc/auto-documented-makefile/&#34;&gt;Makefileを自己文書化する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.songmu.jp/riji/entry/2016-06-13-make2help.html&#34;&gt;Makefileを自己文書化する &lt;code&gt;make2help&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://postd.cc/go-best-practices-2016/#repository-structure&#34;&gt;6年間におけるGoのベストプラクティス: リポジトリ構造&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>